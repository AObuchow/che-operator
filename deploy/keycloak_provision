/opt/eap/bin/kcadm.sh config credentials --server http://0.0.0.0:8080/auth \
                                        --realm master \
                                        --user $keycloakAdminUserName \
                                        --password $keycloakAdminPassword \
&& /opt/eap/bin/kcadm.sh update realms/master -s sslRequired=none \
&& /opt/eap/bin/kcadm.sh create realms  -s realm='$keycloakRealm' \
                                        -s displayName='Codeready Workspaces' \
                                        -s enabled=true \
                                        -s sslRequired=none \
                                        -s registrationAllowed=true \
                                        -s loginTheme=$keycloakTheme \
                                        -s accountTheme=$keycloakTheme \
                                        -s adminTheme=$keycloakTheme \
                                        -s emailTheme=$keycloakTheme \
&& /opt/eap/bin/kcadm.sh create clients -r '$keycloakRealm' \
                                        -s clientId=$keycloakClientId \
                                        -s 'webOrigins=["$protocol://$cheHost"]' \
                                        -s 'redirectUris=["$protocol://$cheHost/*"]' \
                                        -s 'directAccessGrantsEnabled'=true \
                                        -s publicClient=true \
&& /opt/eap/bin/kcadm.sh create users   -s username=admin \
                                        -s email=\"admin@admin.com\" \
                                        -s enabled=true -r '$keycloakRealm' \
                                        -s 'requiredActions=[$requiredActions]' \
&& /opt/eap/bin/kcadm.sh set-password   -r '$keycloakRealm' --username admin \
                                        --new-password admin \
&& /opt/eap/bin/kcadm.sh add-roles      -r '$keycloakRealm' \
                                        --uusername admin \
                                        --cclientid broker \
                                        --rolename read-token \
                                        $trustStoreCommandArg